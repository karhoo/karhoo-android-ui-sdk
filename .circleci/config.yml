version: 2.1
orbs:
  android: circleci/android@2.1.2
config_android:
  docker:
    - image: circleci/android:api-29
  working_directory: ~/project
  environment:
    JAVA_TOOL_OPTIONS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=80"
    GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dkotlin.incremental=false"
    TERM: dumb
    FASTLANE_LANE_LINT: linting
    FASTLANE_LANE_TEST: unit_tests
jobs:
  build_and_setup:
    docker:
      - image: circleci/android:api-29
    working_directory: ~/project
    environment:
      - JAVA_TOOL_OPTIONS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=80"
      - GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dkotlin.incremental=false"
      - TERM: dumb
      - FASTLANE_LANE_LINT: linting
      - FASTLANE_LANE_TEST: unit_tests
    steps:
      - checkout
      - restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Download Dependencies
          command: |
            bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Decode secure.properties
          command: |
            echo 'export SECURE_PROPERTIES="$SECURE_PROPERTIES"' >> $BASH_ENV
            echo $SECURE_PROPERTIES | base64 -di > app/secure.properties
            sudo chmod +x ./gradlew
      - run:
          # Export base64 encoded google-services.json
          # into local bash variables & Decode the base64 string
          name: Export & Decode Google Services Json
          command: |
            echo 'export GOOGLE_SERVICES_JSON="$GOOGLE_SERVICES_JSON"' >> $BASH_ENV
            echo $GOOGLE_SERVICES_JSON | base64 -di > app/google-services.json
      - android/create-avd:
          avd-name: myavd
          install: true
          system-image: system-images;android-29;default;x86
      - android/start-emulator:
          avd-name: myavd
          no-window: true
          restore-gradle-cache-prefix: v1a
      - android/run-tests
      - android/save-gradle-cache:
          cache-prefix: v1a
      - run:
          name: Run unit test
          command: bundle exec fastlane $FASTLANE_LANE_TEST
      - run:
          name: Run linting
          command: bundle exec fastlane $FASTLANE_LANE_LINT
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex "./.*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
          destination: tests
      - store_artifacts:
          path: ./app/build/reports
          destination: reports/
      - persist_to_workspace:
          root: .
          paths:
            - ./app/build
  
workflows:
  version: 2
  build_and_test:
    jobs:
      - build_and_setup
