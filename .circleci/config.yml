version: 2.1
orbs:
  android: circleci/android@2.1.2
config_android:
  docker:
    - image: circleci/android:api-29
  working_directory: ~/project
  environment:
    JAVA_TOOL_OPTIONS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=80"
    GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dkotlin.incremental=false"
    TERM: dumb
    FASTLANE_LANE_LINT: linting
    FASTLANE_LANE_TEST: unit_tests
jobs:
  build_and_setup:
    docker:
      - image: circleci/android:api-29
    working_directory: ~/project
    environment:
      - JAVA_TOOL_OPTIONS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=80"
      - GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dkotlin.incremental=false"
      - TERM: dumb
      - FASTLANE_LANE_LINT: linting
      - FASTLANE_LANE_TEST: unit_tests
    steps:
      - checkout
      - restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Download Dependencies
          command: |
            bundle check || bundle install --path vendor/bundle
            - echo y | sdkmanager update sdk --no-ui --all --filter tools
            - echo y | sdkmanager update sdk --no-ui --all --filter platform-tools
            - echo y | sdkmanager update sdk --no-ui --all --filter extra-android-m2repository
            - echo y | sdkmanager update sdk --no-ui --all --filter extra-android-support
            - echo y | sdkmanager update sdk --no-ui --all --filter extra-google-google_play_services
            - echo y | sdkmanager update sdk --no-ui --all --filter extra-google-m2repository
            - echo y | sdkmanager update sdk --no-ui --all --filter android-22
            - echo y | sdkmanager update sdk --no-ui --all --filter build-tools-23.0.2
            - echo y | sdkmanager update sdk -a -u -t sys-img-armeabi-v7a-google_apis-22
            - sdkmanager list targets
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Decode secure.properties
          command: |
            echo 'export SECURE_PROPERTIES="$SECURE_PROPERTIES"' >> $BASH_ENV
            echo $SECURE_PROPERTIES | base64 -di > app/secure.properties
            sudo chmod +x ./gradlew
      - run:
          # Export base64 encoded google-services.json
          # into local bash variables & Decode the base64 string
          name: Export & Decode Google Services Json
          command: |
            echo 'export GOOGLE_SERVICES_JSON="$GOOGLE_SERVICES_JSON"' >> $BASH_ENV
            echo $GOOGLE_SERVICES_JSON | base64 -di > app/google-services.json
      - run:
          name: Create avd
          command: |
            AVD_PACKAGES="system-images;android-22;google_apis;armeabi-v7a"
            echo "Installing system image for $AVD_PACKAGES"
            sdkmanager $AVD_PACKAGES
            echo "Creating AVD with packages $AVD_PACKAGES"
            echo no | avdmanager create avd --name "test" --force --package "$AVD_PACKAGES" --tag google_apis --abi "armeabi-v7a"
      - run:
          name: Launch emulator
          command: |
            emulator -avd "test" -delay-adb -verbose -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          background: true
      - run:
          name: Wait for emulator to start
          command: |
            circle-android wait-for-boot
      - run:
          name: Generate cache key
          command: |
            find . -name 'build.gradle' | sort | xargs cat |
            shasum | awk '{print $1}' > /tmp/gradle_cache_seed
      - restore_cache:
          key: gradle-v1-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
      - run:
          # run in parallel with the emulator starting up, to optimize build time
          name: Run assembleDebugAndroidTest task
          command: |
            ./gradlew assembleDebugAndroidTest
      - run:
          name: Disable emulator animations
          command: |
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
      - run:
          name: Run UI tests (with retry)
          command: |
            MAX_TRIES=2
            run_with_retry() {
               n=1
               until [ $n -gt $MAX_TRIES ]
               do
                  echo "Starting test attempt $n"
                  ./gradlew connectedDebugAndroidTest && break
                  n=$[$n+1]
                  sleep 5
               done
               if [ $n -gt $MAX_TRIES ]; then
                 echo "Max tries reached ($MAX_TRIES)"
                 exit 1
               fi
            }
            run_with_retry
      - save_cache:
          key: gradle-v1-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
      - android/save-gradle-cache:
          cache-prefix: v1a
      - run:
          name: Run unit test
          command: bundle exec fastlane $FASTLANE_LANE_TEST
      - run:
          name: Run linting
          command: bundle exec fastlane $FASTLANE_LANE_LINT
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex "./.*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
          destination: tests
      - store_artifacts:
          path: ./app/build/reports
          destination: reports/
      - persist_to_workspace:
          root: .
          paths:
            - ./app/build
  
workflows:
  version: 2
  build_and_test:
    jobs:
      - build_and_setup
