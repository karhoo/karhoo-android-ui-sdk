apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.novoda.bintray-release'

group = 'com.karhoo.uisdk'
version = '1.0'

String[] fileFilter = [
        '**/*View*.*',
        '**/*Activity.*'
]
enableJacoco(project, 'Debug', fileFilter)

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.karhoo.uisdk.common.testrunner.UiSDKTestRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        def secureProps = new Properties()
        if (file("../app/secure.properties").exists()) {
            file("../app/secure.properties")?.withInputStream { secureProps.load(it) }
        }
        release {
            buildConfigField("String", "KARHOO_WEB_TRACKING_URL", '"https://agent-portal.karhoo.com/follow/follow/"')
        }
        sandbox {
            buildConfigField("String", "KARHOO_WEB_TRACKING_URL", '"https://agent-portal.sandbox.karhoo.com/follow/"')
        }
        prodQA {
            buildConfigField("String", "KARHOO_WEB_TRACKING_URL", '"https://agent-portal.karhoo.com/follow/follow/"')
        }
        debug {
            buildConfigField("String", "KARHOO_WEB_TRACKING_URL", '"https://agent-portal.stg.karhoo.net/follow/"')
        }
    }
    lintOptions {
    }

    testOptions {
        unitTests.returnDefaultValues = true
        animationsDisabled = true
    }

}

publish {
    def groupProjectID = 'com.karhoo'
    def artifactProjectID = 'uisdk-canary'
    def publishVersionID = '1.1.1-rc-1'
    def repoNameID = 'Android'

    userOrg = 'flit-tech'
    repoName = repoNameID
    groupId = groupProjectID
    artifactId = artifactProjectID
    publishVersion = publishVersionID
    desc = 'Karhoo UI SDK'
    website = 'https://karhoo'
}

dependencies {

    api 'com.karhoo:nsdk:1.1.1'
    api 'com.braintreepayments.api:drop-in:4.4.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    implementation 'joda-time:joda-time:2.10.3'
    implementation 'com.google.android.gms:play-services-location:17.1.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.karumi:dexter:4.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.3.0-alpha03'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.12.2'
    implementation 'com.adyen.checkout:drop-in:3.6.5'

    testImplementation 'junit:junit:4.12'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'android.arch.core:core-testing:1.1.1'
    testImplementation 'org.assertj:assertj-core:3.13.2'
    testImplementation "org.json:json:20200518"

    androidTestImplementation "com.github.tomakehurst:wiremock-standalone:2.27.2"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation('com.schibsted.spain:barista:3.2.0')
}
